class GFG {
    ArrayList<Integer> find(int arr[], int x) {
             ArrayList<Integer> res = new ArrayList<>();
        int first = -1, last = -1;
        int l = 0, h = arr.length - 1;
        while (l <= h) {
            int mid = l + (h - l) / 2;
            if (arr[mid] == x) {
                first = mid;
                h = mid - 1; // move left
            } else if (arr[mid] < x) {
                l = mid + 1;
            } else {
                h = mid - 1;
            }
        }
        l = 0;
        h = arr.length - 1;
        while (l <= h) {
            int mid = l + (h - l) / 2;
            if (arr[mid] == x) {
                last = mid;
                l = mid + 1; 
            } else if (arr[mid] < x) {
                l = mid + 1;
            } else {
                h = mid - 1;
            }
        }

        res.add(first);
        res.add(last);
        return res;
    }
}
